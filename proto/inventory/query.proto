syntax = "proto3";
package jack139.artchain.inventory;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "inventory/review.proto";
import "inventory/item.proto";

option go_package = "github.com/jack139/artchain/x/inventory/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
	rpc Review(QueryGetReviewRequest) returns (QueryGetReviewResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/review/{id}";
	}
	rpc ReviewAll(QueryAllReviewRequest) returns (QueryAllReviewResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/review";
	}

	rpc Item(QueryGetItemRequest) returns (QueryGetItemResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/item/{id}";
	}
	rpc ItemAll(QueryAllItemRequest) returns (QueryAllItemResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/item";
	}
	rpc ItemAllByOwner(QueryAllItemByOwnerRequest) returns (QueryAllItemByOwnerResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/itembyowner/{currentOwnerId}";
	}

	rpc ReviewByStatus(QueryGetReviewByStatusRequest) returns (QueryGetReviewByStatusResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/review/{status}";
	}
	rpc ItemByStatus(QueryGetItemByStatusRequest) returns (QueryGetItemByStatusResponse) {
		option (google.api.http).get = "/jack139/artchain/inventory/item/{status}";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetReviewRequest {
	uint64 id = 1;
	string itemId = 2;
}

message QueryGetReviewResponse {
	Review Review = 1;
}

message QueryAllReviewRequest {
	string itemId =1;
	string status =2;
	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryAllReviewResponse {
	repeated Review Review = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetItemRequest {
	uint64 id = 1;
}

message QueryGetItemResponse {
	Item Item = 1;
}

message QueryAllItemRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllItemResponse {
	repeated Item Item = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllItemByOwnerRequest {
	string currentOwnerId = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllItemByOwnerResponse {
	repeated Item Item = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetReviewByStatusRequest {
	string status =1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
message QueryGetReviewByStatusResponse {
	repeated Review Review = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetItemByStatusRequest {
	string status = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
message QueryGetItemByStatusResponse {
	repeated Item Item = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
