// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: auction/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateBid struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RecType   string `protobuf:"bytes,2,opt,name=recType,proto3" json:"recType,omitempty"`
	AuctionId string `protobuf:"bytes,3,opt,name=auctionId,proto3" json:"auctionId,omitempty"`
	BidNo     string `protobuf:"bytes,4,opt,name=bidNo,proto3" json:"bidNo,omitempty"`
	BuyerId   string `protobuf:"bytes,5,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	BidPrice  string `protobuf:"bytes,6,opt,name=bidPrice,proto3" json:"bidPrice,omitempty"`
	BidTime   string `protobuf:"bytes,7,opt,name=bidTime,proto3" json:"bidTime,omitempty"`
	Status    string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	LastDate  string `protobuf:"bytes,9,opt,name=lastDate,proto3" json:"lastDate,omitempty"`
}

func (m *MsgCreateBid) Reset()         { *m = MsgCreateBid{} }
func (m *MsgCreateBid) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBid) ProtoMessage()    {}
func (*MsgCreateBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{0}
}
func (m *MsgCreateBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBid.Merge(m, src)
}
func (m *MsgCreateBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBid proto.InternalMessageInfo

func (m *MsgCreateBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateBid) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgCreateBid) GetAuctionId() string {
	if m != nil {
		return m.AuctionId
	}
	return ""
}

func (m *MsgCreateBid) GetBidNo() string {
	if m != nil {
		return m.BidNo
	}
	return ""
}

func (m *MsgCreateBid) GetBuyerId() string {
	if m != nil {
		return m.BuyerId
	}
	return ""
}

func (m *MsgCreateBid) GetBidPrice() string {
	if m != nil {
		return m.BidPrice
	}
	return ""
}

func (m *MsgCreateBid) GetBidTime() string {
	if m != nil {
		return m.BidTime
	}
	return ""
}

func (m *MsgCreateBid) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgCreateBid) GetLastDate() string {
	if m != nil {
		return m.LastDate
	}
	return ""
}

type MsgCreateBidResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateBidResponse) Reset()         { *m = MsgCreateBidResponse{} }
func (m *MsgCreateBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBidResponse) ProtoMessage()    {}
func (*MsgCreateBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{1}
}
func (m *MsgCreateBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBidResponse.Merge(m, src)
}
func (m *MsgCreateBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBidResponse proto.InternalMessageInfo

func (m *MsgCreateBidResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateBid struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	RecType   string `protobuf:"bytes,3,opt,name=recType,proto3" json:"recType,omitempty"`
	AuctionId string `protobuf:"bytes,4,opt,name=auctionId,proto3" json:"auctionId,omitempty"`
	BidNo     string `protobuf:"bytes,5,opt,name=bidNo,proto3" json:"bidNo,omitempty"`
	BuyerId   string `protobuf:"bytes,6,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	BidPrice  string `protobuf:"bytes,7,opt,name=bidPrice,proto3" json:"bidPrice,omitempty"`
	BidTime   string `protobuf:"bytes,8,opt,name=bidTime,proto3" json:"bidTime,omitempty"`
	Status    string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	LastDate  string `protobuf:"bytes,10,opt,name=lastDate,proto3" json:"lastDate,omitempty"`
}

func (m *MsgUpdateBid) Reset()         { *m = MsgUpdateBid{} }
func (m *MsgUpdateBid) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBid) ProtoMessage()    {}
func (*MsgUpdateBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{2}
}
func (m *MsgUpdateBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBid.Merge(m, src)
}
func (m *MsgUpdateBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBid proto.InternalMessageInfo

func (m *MsgUpdateBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateBid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateBid) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgUpdateBid) GetAuctionId() string {
	if m != nil {
		return m.AuctionId
	}
	return ""
}

func (m *MsgUpdateBid) GetBidNo() string {
	if m != nil {
		return m.BidNo
	}
	return ""
}

func (m *MsgUpdateBid) GetBuyerId() string {
	if m != nil {
		return m.BuyerId
	}
	return ""
}

func (m *MsgUpdateBid) GetBidPrice() string {
	if m != nil {
		return m.BidPrice
	}
	return ""
}

func (m *MsgUpdateBid) GetBidTime() string {
	if m != nil {
		return m.BidTime
	}
	return ""
}

func (m *MsgUpdateBid) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgUpdateBid) GetLastDate() string {
	if m != nil {
		return m.LastDate
	}
	return ""
}

type MsgUpdateBidResponse struct {
}

func (m *MsgUpdateBidResponse) Reset()         { *m = MsgUpdateBidResponse{} }
func (m *MsgUpdateBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBidResponse) ProtoMessage()    {}
func (*MsgUpdateBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{3}
}
func (m *MsgUpdateBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBidResponse.Merge(m, src)
}
func (m *MsgUpdateBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBidResponse proto.InternalMessageInfo

type MsgDeleteBid struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AuctionId string `protobuf:"bytes,3,opt,name=auctionId,proto3" json:"auctionId,omitempty"`
}

func (m *MsgDeleteBid) Reset()         { *m = MsgDeleteBid{} }
func (m *MsgDeleteBid) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBid) ProtoMessage()    {}
func (*MsgDeleteBid) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{4}
}
func (m *MsgDeleteBid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBid.Merge(m, src)
}
func (m *MsgDeleteBid) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBid proto.InternalMessageInfo

func (m *MsgDeleteBid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteBid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgDeleteBid) GetAuctionId() string {
	if m != nil {
		return m.AuctionId
	}
	return ""
}

type MsgDeleteBidResponse struct {
}

func (m *MsgDeleteBidResponse) Reset()         { *m = MsgDeleteBidResponse{} }
func (m *MsgDeleteBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBidResponse) ProtoMessage()    {}
func (*MsgDeleteBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{5}
}
func (m *MsgDeleteBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBidResponse.Merge(m, src)
}
func (m *MsgDeleteBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBidResponse proto.InternalMessageInfo

type MsgCreateRequest struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RecType        string `protobuf:"bytes,2,opt,name=recType,proto3" json:"recType,omitempty"`
	ItemId         string `protobuf:"bytes,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	AuctionHouseId string `protobuf:"bytes,4,opt,name=auctionHouseId,proto3" json:"auctionHouseId,omitempty"`
	SellerId       string `protobuf:"bytes,5,opt,name=SellerId,proto3" json:"SellerId,omitempty"`
	RequestDate    string `protobuf:"bytes,6,opt,name=requestDate,proto3" json:"requestDate,omitempty"`
	ReservePrice   string `protobuf:"bytes,7,opt,name=reservePrice,proto3" json:"reservePrice,omitempty"`
	Status         string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	OpenDate       string `protobuf:"bytes,9,opt,name=openDate,proto3" json:"openDate,omitempty"`
	CloseDate      string `protobuf:"bytes,10,opt,name=closeDate,proto3" json:"closeDate,omitempty"`
	LastDate       string `protobuf:"bytes,11,opt,name=lastDate,proto3" json:"lastDate,omitempty"`
}

func (m *MsgCreateRequest) Reset()         { *m = MsgCreateRequest{} }
func (m *MsgCreateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRequest) ProtoMessage()    {}
func (*MsgCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{6}
}
func (m *MsgCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRequest.Merge(m, src)
}
func (m *MsgCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRequest proto.InternalMessageInfo

func (m *MsgCreateRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRequest) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgCreateRequest) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *MsgCreateRequest) GetAuctionHouseId() string {
	if m != nil {
		return m.AuctionHouseId
	}
	return ""
}

func (m *MsgCreateRequest) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *MsgCreateRequest) GetRequestDate() string {
	if m != nil {
		return m.RequestDate
	}
	return ""
}

func (m *MsgCreateRequest) GetReservePrice() string {
	if m != nil {
		return m.ReservePrice
	}
	return ""
}

func (m *MsgCreateRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgCreateRequest) GetOpenDate() string {
	if m != nil {
		return m.OpenDate
	}
	return ""
}

func (m *MsgCreateRequest) GetCloseDate() string {
	if m != nil {
		return m.CloseDate
	}
	return ""
}

func (m *MsgCreateRequest) GetLastDate() string {
	if m != nil {
		return m.LastDate
	}
	return ""
}

type MsgCreateRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateRequestResponse) Reset()         { *m = MsgCreateRequestResponse{} }
func (m *MsgCreateRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRequestResponse) ProtoMessage()    {}
func (*MsgCreateRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{7}
}
func (m *MsgCreateRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRequestResponse.Merge(m, src)
}
func (m *MsgCreateRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRequestResponse proto.InternalMessageInfo

func (m *MsgCreateRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateRequest struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	RecType        string `protobuf:"bytes,3,opt,name=recType,proto3" json:"recType,omitempty"`
	ItemId         string `protobuf:"bytes,4,opt,name=itemId,proto3" json:"itemId,omitempty"`
	AuctionHouseId string `protobuf:"bytes,5,opt,name=auctionHouseId,proto3" json:"auctionHouseId,omitempty"`
	SellerId       string `protobuf:"bytes,6,opt,name=SellerId,proto3" json:"SellerId,omitempty"`
	RequestDate    string `protobuf:"bytes,7,opt,name=requestDate,proto3" json:"requestDate,omitempty"`
	ReservePrice   string `protobuf:"bytes,8,opt,name=reservePrice,proto3" json:"reservePrice,omitempty"`
	Status         string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	OpenDate       string `protobuf:"bytes,10,opt,name=openDate,proto3" json:"openDate,omitempty"`
	CloseDate      string `protobuf:"bytes,11,opt,name=closeDate,proto3" json:"closeDate,omitempty"`
	LastDate       string `protobuf:"bytes,12,opt,name=lastDate,proto3" json:"lastDate,omitempty"`
}

func (m *MsgUpdateRequest) Reset()         { *m = MsgUpdateRequest{} }
func (m *MsgUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRequest) ProtoMessage()    {}
func (*MsgUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{8}
}
func (m *MsgUpdateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRequest.Merge(m, src)
}
func (m *MsgUpdateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRequest proto.InternalMessageInfo

func (m *MsgUpdateRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateRequest) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgUpdateRequest) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *MsgUpdateRequest) GetAuctionHouseId() string {
	if m != nil {
		return m.AuctionHouseId
	}
	return ""
}

func (m *MsgUpdateRequest) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *MsgUpdateRequest) GetRequestDate() string {
	if m != nil {
		return m.RequestDate
	}
	return ""
}

func (m *MsgUpdateRequest) GetReservePrice() string {
	if m != nil {
		return m.ReservePrice
	}
	return ""
}

func (m *MsgUpdateRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgUpdateRequest) GetOpenDate() string {
	if m != nil {
		return m.OpenDate
	}
	return ""
}

func (m *MsgUpdateRequest) GetCloseDate() string {
	if m != nil {
		return m.CloseDate
	}
	return ""
}

func (m *MsgUpdateRequest) GetLastDate() string {
	if m != nil {
		return m.LastDate
	}
	return ""
}

type MsgUpdateRequestResponse struct {
}

func (m *MsgUpdateRequestResponse) Reset()         { *m = MsgUpdateRequestResponse{} }
func (m *MsgUpdateRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRequestResponse) ProtoMessage()    {}
func (*MsgUpdateRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{9}
}
func (m *MsgUpdateRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRequestResponse.Merge(m, src)
}
func (m *MsgUpdateRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRequestResponse proto.InternalMessageInfo

type MsgDeleteRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteRequest) Reset()         { *m = MsgDeleteRequest{} }
func (m *MsgDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRequest) ProtoMessage()    {}
func (*MsgDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{10}
}
func (m *MsgDeleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRequest.Merge(m, src)
}
func (m *MsgDeleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRequest proto.InternalMessageInfo

func (m *MsgDeleteRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteRequestResponse struct {
}

func (m *MsgDeleteRequestResponse) Reset()         { *m = MsgDeleteRequestResponse{} }
func (m *MsgDeleteRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRequestResponse) ProtoMessage()    {}
func (*MsgDeleteRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_085dc3627a5d85eb, []int{11}
}
func (m *MsgDeleteRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRequestResponse.Merge(m, src)
}
func (m *MsgDeleteRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRequestResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateBid)(nil), "jack139.artchain.auction.MsgCreateBid")
	proto.RegisterType((*MsgCreateBidResponse)(nil), "jack139.artchain.auction.MsgCreateBidResponse")
	proto.RegisterType((*MsgUpdateBid)(nil), "jack139.artchain.auction.MsgUpdateBid")
	proto.RegisterType((*MsgUpdateBidResponse)(nil), "jack139.artchain.auction.MsgUpdateBidResponse")
	proto.RegisterType((*MsgDeleteBid)(nil), "jack139.artchain.auction.MsgDeleteBid")
	proto.RegisterType((*MsgDeleteBidResponse)(nil), "jack139.artchain.auction.MsgDeleteBidResponse")
	proto.RegisterType((*MsgCreateRequest)(nil), "jack139.artchain.auction.MsgCreateRequest")
	proto.RegisterType((*MsgCreateRequestResponse)(nil), "jack139.artchain.auction.MsgCreateRequestResponse")
	proto.RegisterType((*MsgUpdateRequest)(nil), "jack139.artchain.auction.MsgUpdateRequest")
	proto.RegisterType((*MsgUpdateRequestResponse)(nil), "jack139.artchain.auction.MsgUpdateRequestResponse")
	proto.RegisterType((*MsgDeleteRequest)(nil), "jack139.artchain.auction.MsgDeleteRequest")
	proto.RegisterType((*MsgDeleteRequestResponse)(nil), "jack139.artchain.auction.MsgDeleteRequestResponse")
}

func init() { proto.RegisterFile("auction/tx.proto", fileDescriptor_085dc3627a5d85eb) }

var fileDescriptor_085dc3627a5d85eb = []byte{
	// 643 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0xcd, 0x6a, 0xdb, 0x4e,
	0x14, 0xc5, 0x23, 0xc5, 0x96, 0xad, 0x49, 0xfe, 0x21, 0x0c, 0xc1, 0x0c, 0xe6, 0x8f, 0x08, 0x5e,
	0x98, 0xe2, 0x82, 0x4c, 0x93, 0x55, 0xa1, 0xab, 0x34, 0x85, 0x66, 0x91, 0x52, 0xdc, 0xb4, 0x8b,
	0xee, 0x64, 0xe9, 0xe2, 0x4c, 0x6b, 0x5b, 0xaa, 0x66, 0x54, 0xe2, 0x27, 0x28, 0x74, 0xd5, 0xc7,
	0xea, 0x32, 0xab, 0xd2, 0x65, 0xb1, 0xa1, 0x0f, 0xd1, 0x55, 0xd1, 0x68, 0x34, 0x92, 0x9c, 0xe8,
	0x23, 0x5d, 0x9e, 0xf9, 0xb8, 0x47, 0xfa, 0x9d, 0x3b, 0x23, 0xa1, 0x43, 0x27, 0x72, 0x39, 0xf5,
	0x97, 0x63, 0x7e, 0x63, 0x07, 0xa1, 0xcf, 0x7d, 0x4c, 0x3e, 0x38, 0xee, 0xc7, 0x27, 0xa7, 0x4f,
	0x6d, 0x27, 0xe4, 0xee, 0xb5, 0x43, 0x97, 0xb6, 0x5c, 0x32, 0xf8, 0xa3, 0xa1, 0xfd, 0x4b, 0x36,
	0x7b, 0x1e, 0x82, 0xc3, 0xe1, 0x8c, 0x7a, 0x98, 0xa0, 0x8e, 0x1b, 0x0b, 0x3f, 0x24, 0xda, 0xb1,
	0xf6, 0xc8, 0x9c, 0xa4, 0x32, 0x9e, 0x09, 0xc1, 0xbd, 0x5a, 0x05, 0x40, 0xf4, 0x64, 0x46, 0x4a,
	0xfc, 0x3f, 0x32, 0x65, 0xbd, 0x0b, 0x8f, 0xec, 0x8a, 0xb9, 0x6c, 0x00, 0x1f, 0xa1, 0xf6, 0x94,
	0x7a, 0xaf, 0x7c, 0xd2, 0x12, 0x33, 0x89, 0x88, 0xab, 0x4d, 0xa3, 0x15, 0x84, 0x17, 0x1e, 0x69,
	0x27, 0xd5, 0xa4, 0xc4, 0x7d, 0xd4, 0x9d, 0x52, 0xef, 0x75, 0x48, 0x5d, 0x20, 0x86, 0x98, 0x52,
	0x5a, 0xec, 0xa2, 0xde, 0x15, 0x5d, 0x00, 0xe9, 0xc8, 0x5d, 0x89, 0xc4, 0x3d, 0x64, 0x30, 0xee,
	0xf0, 0x88, 0x91, 0xae, 0x98, 0x90, 0x2a, 0xae, 0x36, 0x77, 0x18, 0x3f, 0x77, 0x38, 0x10, 0x33,
	0xa9, 0x96, 0xea, 0xc1, 0x10, 0x1d, 0xe5, 0xdf, 0x7d, 0x02, 0x2c, 0xf0, 0x97, 0x0c, 0xf0, 0x01,
	0xd2, 0xa9, 0x27, 0x5e, 0xbf, 0x35, 0xd1, 0xa9, 0x37, 0xf8, 0xaa, 0x0b, 0x48, 0x6f, 0x03, 0xaf,
	0x16, 0x52, 0xb2, 0x55, 0x4f, 0xb7, 0xe6, 0xa1, 0xed, 0x56, 0x40, 0x6b, 0x95, 0x42, 0x6b, 0x97,
	0x40, 0x33, 0xca, 0xa1, 0x75, 0xca, 0xa1, 0x75, 0xcb, 0xa0, 0x99, 0xa5, 0xd0, 0xd0, 0x16, 0xb4,
	0x9e, 0x80, 0xa6, 0x58, 0xa4, 0xd0, 0x06, 0xef, 0x04, 0xa3, 0x73, 0x98, 0xc3, 0x43, 0x19, 0x55,
	0xb6, 0x8f, 0xf4, 0x53, 0x75, 0x95, 0xdf, 0x0f, 0x1d, 0x1d, 0xaa, 0xf4, 0x26, 0xf0, 0x29, 0x02,
	0xc6, 0xff, 0xa9, 0x7b, 0x7b, 0xc8, 0xa0, 0x1c, 0x16, 0xca, 0x5b, 0x2a, 0x3c, 0x44, 0x07, 0xf2,
	0x29, 0x5e, 0xfa, 0x11, 0x03, 0x95, 0xd2, 0xd6, 0x68, 0x0c, 0xeb, 0x0d, 0xcc, 0xe7, 0xb9, 0x56,
	0x56, 0x1a, 0x1f, 0xa3, 0xbd, 0x30, 0x79, 0x34, 0xc1, 0x32, 0x09, 0x2d, 0x3f, 0x84, 0x07, 0x68,
	0x3f, 0x04, 0x06, 0xe1, 0x67, 0xc8, 0x87, 0x57, 0x18, 0xab, 0xea, 0x6d, 0x3f, 0x80, 0x65, 0xbe,
	0xb7, 0x53, 0x1d, 0x43, 0x75, 0xe7, 0x3e, 0x83, 0x5c, 0x86, 0xd9, 0x40, 0x21, 0xe0, 0xbd, 0xad,
	0x80, 0x47, 0x88, 0x6c, 0x73, 0x2d, 0x3d, 0x19, 0xbf, 0x93, 0x10, 0x92, 0x6e, 0xa8, 0x0f, 0xa1,
	0xf9, 0xe9, 0xc8, 0x42, 0x69, 0xd5, 0x84, 0xd2, 0xae, 0x0d, 0xc5, 0xa8, 0x0e, 0xa5, 0x53, 0x1f,
	0x4a, 0xb7, 0x32, 0x14, 0xb3, 0x34, 0x14, 0x54, 0x15, 0xca, 0x5e, 0x55, 0x28, 0xfb, 0x5b, 0xa1,
	0xf4, 0x45, 0x28, 0x05, 0xce, 0xea, 0x24, 0x3c, 0x13, 0x19, 0x24, 0x27, 0xe4, 0xc1, 0x19, 0xc8,
	0xca, 0x85, 0xdd, 0x69, 0xe5, 0x93, 0x2f, 0x6d, 0xb4, 0x7b, 0xc9, 0x66, 0xd8, 0x45, 0x66, 0xf6,
	0x85, 0x18, 0xda, 0x65, 0x5f, 0x13, 0x3b, 0x7f, 0x9b, 0xf6, 0xed, 0x66, 0xeb, 0x54, 0x6f, 0xb9,
	0xc8, 0xcc, 0x6e, 0xd8, 0x6a, 0x13, 0xb5, 0xae, 0xc6, 0xe4, 0xce, 0x2d, 0x15, 0x9b, 0x64, 0x57,
	0x54, 0xb5, 0x89, 0x5a, 0x57, 0x63, 0x72, 0xe7, 0x6a, 0xc2, 0x3e, 0xfa, 0xaf, 0x78, 0x2d, 0x8d,
	0x1a, 0xa0, 0x90, 0x6b, 0xfb, 0x27, 0xcd, 0xd7, 0xe6, 0x0d, 0x8b, 0x47, 0x70, 0xd4, 0x00, 0x4b,
	0x33, 0xc3, 0x7b, 0x5b, 0x2e, 0x36, 0x2c, 0xf6, 0xdb, 0xa8, 0x01, 0xa2, 0x66, 0x86, 0xf7, 0x76,
	0xe2, 0xd9, 0x8b, 0xef, 0x6b, 0x4b, 0xbb, 0x5d, 0x5b, 0xda, 0xaf, 0xb5, 0xa5, 0x7d, 0xdb, 0x58,
	0x3b, 0xb7, 0x1b, 0x6b, 0xe7, 0xe7, 0xc6, 0xda, 0x79, 0xff, 0x78, 0x46, 0xf9, 0x75, 0x34, 0xb5,
	0x5d, 0x7f, 0x31, 0x96, 0x75, 0xc7, 0x69, 0xdd, 0xf1, 0xcd, 0x58, 0xfd, 0x0b, 0xad, 0x02, 0x60,
	0x53, 0x43, 0xfc, 0x0f, 0x9d, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x31, 0xd8, 0x19, 0xed, 0x23,
	0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateBid(ctx context.Context, in *MsgCreateBid, opts ...grpc.CallOption) (*MsgCreateBidResponse, error)
	UpdateBid(ctx context.Context, in *MsgUpdateBid, opts ...grpc.CallOption) (*MsgUpdateBidResponse, error)
	DeleteBid(ctx context.Context, in *MsgDeleteBid, opts ...grpc.CallOption) (*MsgDeleteBidResponse, error)
	CreateRequest(ctx context.Context, in *MsgCreateRequest, opts ...grpc.CallOption) (*MsgCreateRequestResponse, error)
	UpdateRequest(ctx context.Context, in *MsgUpdateRequest, opts ...grpc.CallOption) (*MsgUpdateRequestResponse, error)
	DeleteRequest(ctx context.Context, in *MsgDeleteRequest, opts ...grpc.CallOption) (*MsgDeleteRequestResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateBid(ctx context.Context, in *MsgCreateBid, opts ...grpc.CallOption) (*MsgCreateBidResponse, error) {
	out := new(MsgCreateBidResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.auction.Msg/CreateBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateBid(ctx context.Context, in *MsgUpdateBid, opts ...grpc.CallOption) (*MsgUpdateBidResponse, error) {
	out := new(MsgUpdateBidResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.auction.Msg/UpdateBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteBid(ctx context.Context, in *MsgDeleteBid, opts ...grpc.CallOption) (*MsgDeleteBidResponse, error) {
	out := new(MsgDeleteBidResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.auction.Msg/DeleteBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRequest(ctx context.Context, in *MsgCreateRequest, opts ...grpc.CallOption) (*MsgCreateRequestResponse, error) {
	out := new(MsgCreateRequestResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.auction.Msg/CreateRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRequest(ctx context.Context, in *MsgUpdateRequest, opts ...grpc.CallOption) (*MsgUpdateRequestResponse, error) {
	out := new(MsgUpdateRequestResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.auction.Msg/UpdateRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRequest(ctx context.Context, in *MsgDeleteRequest, opts ...grpc.CallOption) (*MsgDeleteRequestResponse, error) {
	out := new(MsgDeleteRequestResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.auction.Msg/DeleteRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateBid(context.Context, *MsgCreateBid) (*MsgCreateBidResponse, error)
	UpdateBid(context.Context, *MsgUpdateBid) (*MsgUpdateBidResponse, error)
	DeleteBid(context.Context, *MsgDeleteBid) (*MsgDeleteBidResponse, error)
	CreateRequest(context.Context, *MsgCreateRequest) (*MsgCreateRequestResponse, error)
	UpdateRequest(context.Context, *MsgUpdateRequest) (*MsgUpdateRequestResponse, error)
	DeleteRequest(context.Context, *MsgDeleteRequest) (*MsgDeleteRequestResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateBid(ctx context.Context, req *MsgCreateBid) (*MsgCreateBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBid not implemented")
}
func (*UnimplementedMsgServer) UpdateBid(ctx context.Context, req *MsgUpdateBid) (*MsgUpdateBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBid not implemented")
}
func (*UnimplementedMsgServer) DeleteBid(ctx context.Context, req *MsgDeleteBid) (*MsgDeleteBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBid not implemented")
}
func (*UnimplementedMsgServer) CreateRequest(ctx context.Context, req *MsgCreateRequest) (*MsgCreateRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRequest not implemented")
}
func (*UnimplementedMsgServer) UpdateRequest(ctx context.Context, req *MsgUpdateRequest) (*MsgUpdateRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRequest not implemented")
}
func (*UnimplementedMsgServer) DeleteRequest(ctx context.Context, req *MsgDeleteRequest) (*MsgDeleteRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRequest not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.auction.Msg/CreateBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateBid(ctx, req.(*MsgCreateBid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.auction.Msg/UpdateBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateBid(ctx, req.(*MsgUpdateBid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteBid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.auction.Msg/DeleteBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteBid(ctx, req.(*MsgDeleteBid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.auction.Msg/CreateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRequest(ctx, req.(*MsgCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.auction.Msg/UpdateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRequest(ctx, req.(*MsgUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.auction.Msg/DeleteRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRequest(ctx, req.(*MsgDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jack139.artchain.auction.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBid",
			Handler:    _Msg_CreateBid_Handler,
		},
		{
			MethodName: "UpdateBid",
			Handler:    _Msg_UpdateBid_Handler,
		},
		{
			MethodName: "DeleteBid",
			Handler:    _Msg_DeleteBid_Handler,
		},
		{
			MethodName: "CreateRequest",
			Handler:    _Msg_CreateRequest_Handler,
		},
		{
			MethodName: "UpdateRequest",
			Handler:    _Msg_UpdateRequest_Handler,
		},
		{
			MethodName: "DeleteRequest",
			Handler:    _Msg_DeleteRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auction/tx.proto",
}

func (m *MsgCreateBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LastDate) > 0 {
		i -= len(m.LastDate)
		copy(dAtA[i:], m.LastDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastDate)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BidTime) > 0 {
		i -= len(m.BidTime)
		copy(dAtA[i:], m.BidTime)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidTime)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BidPrice) > 0 {
		i -= len(m.BidPrice)
		copy(dAtA[i:], m.BidPrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidPrice)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BuyerId) > 0 {
		i -= len(m.BuyerId)
		copy(dAtA[i:], m.BuyerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuyerId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BidNo) > 0 {
		i -= len(m.BidNo)
		copy(dAtA[i:], m.BidNo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidNo)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AuctionId) > 0 {
		i -= len(m.AuctionId)
		copy(dAtA[i:], m.AuctionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LastDate) > 0 {
		i -= len(m.LastDate)
		copy(dAtA[i:], m.LastDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastDate)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.BidTime) > 0 {
		i -= len(m.BidTime)
		copy(dAtA[i:], m.BidTime)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidTime)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BidPrice) > 0 {
		i -= len(m.BidPrice)
		copy(dAtA[i:], m.BidPrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidPrice)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BuyerId) > 0 {
		i -= len(m.BuyerId)
		copy(dAtA[i:], m.BuyerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuyerId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BidNo) > 0 {
		i -= len(m.BidNo)
		copy(dAtA[i:], m.BidNo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidNo)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AuctionId) > 0 {
		i -= len(m.AuctionId)
		copy(dAtA[i:], m.AuctionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuctionId) > 0 {
		i -= len(m.AuctionId)
		copy(dAtA[i:], m.AuctionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LastDate) > 0 {
		i -= len(m.LastDate)
		copy(dAtA[i:], m.LastDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastDate)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CloseDate) > 0 {
		i -= len(m.CloseDate)
		copy(dAtA[i:], m.CloseDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CloseDate)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.OpenDate) > 0 {
		i -= len(m.OpenDate)
		copy(dAtA[i:], m.OpenDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpenDate)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ReservePrice) > 0 {
		i -= len(m.ReservePrice)
		copy(dAtA[i:], m.ReservePrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReservePrice)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RequestDate) > 0 {
		i -= len(m.RequestDate)
		copy(dAtA[i:], m.RequestDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequestDate)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SellerId) > 0 {
		i -= len(m.SellerId)
		copy(dAtA[i:], m.SellerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SellerId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AuctionHouseId) > 0 {
		i -= len(m.AuctionHouseId)
		copy(dAtA[i:], m.AuctionHouseId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionHouseId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ItemId) > 0 {
		i -= len(m.ItemId)
		copy(dAtA[i:], m.ItemId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LastDate) > 0 {
		i -= len(m.LastDate)
		copy(dAtA[i:], m.LastDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastDate)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.CloseDate) > 0 {
		i -= len(m.CloseDate)
		copy(dAtA[i:], m.CloseDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CloseDate)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.OpenDate) > 0 {
		i -= len(m.OpenDate)
		copy(dAtA[i:], m.OpenDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpenDate)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ReservePrice) > 0 {
		i -= len(m.ReservePrice)
		copy(dAtA[i:], m.ReservePrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReservePrice)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.RequestDate) > 0 {
		i -= len(m.RequestDate)
		copy(dAtA[i:], m.RequestDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequestDate)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SellerId) > 0 {
		i -= len(m.SellerId)
		copy(dAtA[i:], m.SellerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SellerId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AuctionHouseId) > 0 {
		i -= len(m.AuctionHouseId)
		copy(dAtA[i:], m.AuctionHouseId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AuctionHouseId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ItemId) > 0 {
		i -= len(m.ItemId)
		copy(dAtA[i:], m.ItemId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidNo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BuyerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidPrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidTime)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidNo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BuyerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidPrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidTime)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteBid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AuctionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionHouseId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SellerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequestDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReservePrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpenDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CloseDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AuctionHouseId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SellerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequestDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReservePrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpenDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CloseDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidPrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidPrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidPrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidPrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionHouseId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionHouseId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservePrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReservePrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuctionHouseId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuctionHouseId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservePrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReservePrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
