// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: inventory/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateReview struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RecType      string `protobuf:"bytes,2,opt,name=recType,proto3" json:"recType,omitempty"`
	ItemId       string `protobuf:"bytes,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ReviewerId   string `protobuf:"bytes,4,opt,name=reviewerId,proto3" json:"reviewerId,omitempty"`
	ReviewDetail string `protobuf:"bytes,5,opt,name=reviewDetail,proto3" json:"reviewDetail,omitempty"`
	ReviewDate   string `protobuf:"bytes,6,opt,name=reviewDate,proto3" json:"reviewDate,omitempty"`
	UpCount      string `protobuf:"bytes,7,opt,name=upCount,proto3" json:"upCount,omitempty"`
	DownCount    string `protobuf:"bytes,8,opt,name=downCount,proto3" json:"downCount,omitempty"`
	Status       string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgCreateReview) Reset()         { *m = MsgCreateReview{} }
func (m *MsgCreateReview) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReview) ProtoMessage()    {}
func (*MsgCreateReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{0}
}
func (m *MsgCreateReview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReview.Merge(m, src)
}
func (m *MsgCreateReview) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReview) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReview.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReview proto.InternalMessageInfo

func (m *MsgCreateReview) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateReview) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgCreateReview) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *MsgCreateReview) GetReviewerId() string {
	if m != nil {
		return m.ReviewerId
	}
	return ""
}

func (m *MsgCreateReview) GetReviewDetail() string {
	if m != nil {
		return m.ReviewDetail
	}
	return ""
}

func (m *MsgCreateReview) GetReviewDate() string {
	if m != nil {
		return m.ReviewDate
	}
	return ""
}

func (m *MsgCreateReview) GetUpCount() string {
	if m != nil {
		return m.UpCount
	}
	return ""
}

func (m *MsgCreateReview) GetDownCount() string {
	if m != nil {
		return m.DownCount
	}
	return ""
}

func (m *MsgCreateReview) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgCreateReviewResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateReviewResponse) Reset()         { *m = MsgCreateReviewResponse{} }
func (m *MsgCreateReviewResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReviewResponse) ProtoMessage()    {}
func (*MsgCreateReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{1}
}
func (m *MsgCreateReviewResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReviewResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReviewResponse.Merge(m, src)
}
func (m *MsgCreateReviewResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReviewResponse proto.InternalMessageInfo

func (m *MsgCreateReviewResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateReview struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id           uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	RecType      string `protobuf:"bytes,3,opt,name=recType,proto3" json:"recType,omitempty"`
	ItemId       string `protobuf:"bytes,4,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ReviewerId   string `protobuf:"bytes,5,opt,name=reviewerId,proto3" json:"reviewerId,omitempty"`
	ReviewDetail string `protobuf:"bytes,6,opt,name=reviewDetail,proto3" json:"reviewDetail,omitempty"`
	ReviewDate   string `protobuf:"bytes,7,opt,name=reviewDate,proto3" json:"reviewDate,omitempty"`
	UpCount      string `protobuf:"bytes,8,opt,name=upCount,proto3" json:"upCount,omitempty"`
	DownCount    string `protobuf:"bytes,9,opt,name=downCount,proto3" json:"downCount,omitempty"`
	Status       string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgUpdateReview) Reset()         { *m = MsgUpdateReview{} }
func (m *MsgUpdateReview) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReview) ProtoMessage()    {}
func (*MsgUpdateReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{2}
}
func (m *MsgUpdateReview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReview.Merge(m, src)
}
func (m *MsgUpdateReview) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReview) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReview.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReview proto.InternalMessageInfo

func (m *MsgUpdateReview) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateReview) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateReview) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgUpdateReview) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *MsgUpdateReview) GetReviewerId() string {
	if m != nil {
		return m.ReviewerId
	}
	return ""
}

func (m *MsgUpdateReview) GetReviewDetail() string {
	if m != nil {
		return m.ReviewDetail
	}
	return ""
}

func (m *MsgUpdateReview) GetReviewDate() string {
	if m != nil {
		return m.ReviewDate
	}
	return ""
}

func (m *MsgUpdateReview) GetUpCount() string {
	if m != nil {
		return m.UpCount
	}
	return ""
}

func (m *MsgUpdateReview) GetDownCount() string {
	if m != nil {
		return m.DownCount
	}
	return ""
}

func (m *MsgUpdateReview) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgUpdateReviewResponse struct {
}

func (m *MsgUpdateReviewResponse) Reset()         { *m = MsgUpdateReviewResponse{} }
func (m *MsgUpdateReviewResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReviewResponse) ProtoMessage()    {}
func (*MsgUpdateReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{3}
}
func (m *MsgUpdateReviewResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReviewResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReviewResponse.Merge(m, src)
}
func (m *MsgUpdateReviewResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReviewResponse proto.InternalMessageInfo

type MsgDeleteReview struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ItemId  string `protobuf:"bytes,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
}

func (m *MsgDeleteReview) Reset()         { *m = MsgDeleteReview{} }
func (m *MsgDeleteReview) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReview) ProtoMessage()    {}
func (*MsgDeleteReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{4}
}
func (m *MsgDeleteReview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReview.Merge(m, src)
}
func (m *MsgDeleteReview) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReview) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReview.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReview proto.InternalMessageInfo

func (m *MsgDeleteReview) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteReview) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgDeleteReview) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

type MsgDeleteReviewResponse struct {
}

func (m *MsgDeleteReviewResponse) Reset()         { *m = MsgDeleteReviewResponse{} }
func (m *MsgDeleteReviewResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReviewResponse) ProtoMessage()    {}
func (*MsgDeleteReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{5}
}
func (m *MsgDeleteReviewResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReviewResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReviewResponse.Merge(m, src)
}
func (m *MsgDeleteReviewResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReviewResponse proto.InternalMessageInfo

type MsgCreateItem struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RecType        string `protobuf:"bytes,2,opt,name=recType,proto3" json:"recType,omitempty"`
	ItemDesc       string `protobuf:"bytes,3,opt,name=itemDesc,proto3" json:"itemDesc,omitempty"`
	ItemDetail     string `protobuf:"bytes,4,opt,name=itemDetail,proto3" json:"itemDetail,omitempty"`
	ItemDate       string `protobuf:"bytes,5,opt,name=itemDate,proto3" json:"itemDate,omitempty"`
	ItemType       string `protobuf:"bytes,6,opt,name=itemType,proto3" json:"itemType,omitempty"`
	ItemSubject    string `protobuf:"bytes,7,opt,name=itemSubject,proto3" json:"itemSubject,omitempty"`
	ItemMedia      string `protobuf:"bytes,8,opt,name=itemMedia,proto3" json:"itemMedia,omitempty"`
	ItemSize       string `protobuf:"bytes,9,opt,name=itemSize,proto3" json:"itemSize,omitempty"`
	ItemImage      string `protobuf:"bytes,10,opt,name=itemImage,proto3" json:"itemImage,omitempty"`
	AESKey         string `protobuf:"bytes,11,opt,name=AESKey,proto3" json:"AESKey,omitempty"`
	ItemBasePrice  string `protobuf:"bytes,12,opt,name=itemBasePrice,proto3" json:"itemBasePrice,omitempty"`
	CurrentOwnerId string `protobuf:"bytes,13,opt,name=currentOwnerId,proto3" json:"currentOwnerId,omitempty"`
	Status         string `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgCreateItem) Reset()         { *m = MsgCreateItem{} }
func (m *MsgCreateItem) String() string { return proto.CompactTextString(m) }
func (*MsgCreateItem) ProtoMessage()    {}
func (*MsgCreateItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{6}
}
func (m *MsgCreateItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateItem.Merge(m, src)
}
func (m *MsgCreateItem) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateItem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateItem proto.InternalMessageInfo

func (m *MsgCreateItem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateItem) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgCreateItem) GetItemDesc() string {
	if m != nil {
		return m.ItemDesc
	}
	return ""
}

func (m *MsgCreateItem) GetItemDetail() string {
	if m != nil {
		return m.ItemDetail
	}
	return ""
}

func (m *MsgCreateItem) GetItemDate() string {
	if m != nil {
		return m.ItemDate
	}
	return ""
}

func (m *MsgCreateItem) GetItemType() string {
	if m != nil {
		return m.ItemType
	}
	return ""
}

func (m *MsgCreateItem) GetItemSubject() string {
	if m != nil {
		return m.ItemSubject
	}
	return ""
}

func (m *MsgCreateItem) GetItemMedia() string {
	if m != nil {
		return m.ItemMedia
	}
	return ""
}

func (m *MsgCreateItem) GetItemSize() string {
	if m != nil {
		return m.ItemSize
	}
	return ""
}

func (m *MsgCreateItem) GetItemImage() string {
	if m != nil {
		return m.ItemImage
	}
	return ""
}

func (m *MsgCreateItem) GetAESKey() string {
	if m != nil {
		return m.AESKey
	}
	return ""
}

func (m *MsgCreateItem) GetItemBasePrice() string {
	if m != nil {
		return m.ItemBasePrice
	}
	return ""
}

func (m *MsgCreateItem) GetCurrentOwnerId() string {
	if m != nil {
		return m.CurrentOwnerId
	}
	return ""
}

func (m *MsgCreateItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgCreateItemResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateItemResponse) Reset()         { *m = MsgCreateItemResponse{} }
func (m *MsgCreateItemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateItemResponse) ProtoMessage()    {}
func (*MsgCreateItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{7}
}
func (m *MsgCreateItemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateItemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateItemResponse.Merge(m, src)
}
func (m *MsgCreateItemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateItemResponse proto.InternalMessageInfo

func (m *MsgCreateItemResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateItem struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	RecType        string `protobuf:"bytes,3,opt,name=recType,proto3" json:"recType,omitempty"`
	ItemDesc       string `protobuf:"bytes,4,opt,name=itemDesc,proto3" json:"itemDesc,omitempty"`
	ItemDetail     string `protobuf:"bytes,5,opt,name=itemDetail,proto3" json:"itemDetail,omitempty"`
	ItemDate       string `protobuf:"bytes,6,opt,name=itemDate,proto3" json:"itemDate,omitempty"`
	ItemType       string `protobuf:"bytes,7,opt,name=itemType,proto3" json:"itemType,omitempty"`
	ItemSubject    string `protobuf:"bytes,8,opt,name=itemSubject,proto3" json:"itemSubject,omitempty"`
	ItemMedia      string `protobuf:"bytes,9,opt,name=itemMedia,proto3" json:"itemMedia,omitempty"`
	ItemSize       string `protobuf:"bytes,10,opt,name=itemSize,proto3" json:"itemSize,omitempty"`
	ItemImage      string `protobuf:"bytes,11,opt,name=itemImage,proto3" json:"itemImage,omitempty"`
	AESKey         string `protobuf:"bytes,12,opt,name=AESKey,proto3" json:"AESKey,omitempty"`
	ItemBasePrice  string `protobuf:"bytes,13,opt,name=itemBasePrice,proto3" json:"itemBasePrice,omitempty"`
	CurrentOwnerId string `protobuf:"bytes,14,opt,name=currentOwnerId,proto3" json:"currentOwnerId,omitempty"`
	Status         string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgUpdateItem) Reset()         { *m = MsgUpdateItem{} }
func (m *MsgUpdateItem) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateItem) ProtoMessage()    {}
func (*MsgUpdateItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{8}
}
func (m *MsgUpdateItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateItem.Merge(m, src)
}
func (m *MsgUpdateItem) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateItem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateItem proto.InternalMessageInfo

func (m *MsgUpdateItem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateItem) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateItem) GetRecType() string {
	if m != nil {
		return m.RecType
	}
	return ""
}

func (m *MsgUpdateItem) GetItemDesc() string {
	if m != nil {
		return m.ItemDesc
	}
	return ""
}

func (m *MsgUpdateItem) GetItemDetail() string {
	if m != nil {
		return m.ItemDetail
	}
	return ""
}

func (m *MsgUpdateItem) GetItemDate() string {
	if m != nil {
		return m.ItemDate
	}
	return ""
}

func (m *MsgUpdateItem) GetItemType() string {
	if m != nil {
		return m.ItemType
	}
	return ""
}

func (m *MsgUpdateItem) GetItemSubject() string {
	if m != nil {
		return m.ItemSubject
	}
	return ""
}

func (m *MsgUpdateItem) GetItemMedia() string {
	if m != nil {
		return m.ItemMedia
	}
	return ""
}

func (m *MsgUpdateItem) GetItemSize() string {
	if m != nil {
		return m.ItemSize
	}
	return ""
}

func (m *MsgUpdateItem) GetItemImage() string {
	if m != nil {
		return m.ItemImage
	}
	return ""
}

func (m *MsgUpdateItem) GetAESKey() string {
	if m != nil {
		return m.AESKey
	}
	return ""
}

func (m *MsgUpdateItem) GetItemBasePrice() string {
	if m != nil {
		return m.ItemBasePrice
	}
	return ""
}

func (m *MsgUpdateItem) GetCurrentOwnerId() string {
	if m != nil {
		return m.CurrentOwnerId
	}
	return ""
}

func (m *MsgUpdateItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgUpdateItemResponse struct {
}

func (m *MsgUpdateItemResponse) Reset()         { *m = MsgUpdateItemResponse{} }
func (m *MsgUpdateItemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateItemResponse) ProtoMessage()    {}
func (*MsgUpdateItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{9}
}
func (m *MsgUpdateItemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateItemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateItemResponse.Merge(m, src)
}
func (m *MsgUpdateItemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateItemResponse proto.InternalMessageInfo

type MsgDeleteItem struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteItem) Reset()         { *m = MsgDeleteItem{} }
func (m *MsgDeleteItem) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteItem) ProtoMessage()    {}
func (*MsgDeleteItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{10}
}
func (m *MsgDeleteItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteItem.Merge(m, src)
}
func (m *MsgDeleteItem) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteItem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteItem proto.InternalMessageInfo

func (m *MsgDeleteItem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteItem) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteItemResponse struct {
}

func (m *MsgDeleteItemResponse) Reset()         { *m = MsgDeleteItemResponse{} }
func (m *MsgDeleteItemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteItemResponse) ProtoMessage()    {}
func (*MsgDeleteItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b129a116e431fe05, []int{11}
}
func (m *MsgDeleteItemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteItemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteItemResponse.Merge(m, src)
}
func (m *MsgDeleteItemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteItemResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateReview)(nil), "jack139.artchain.inventory.MsgCreateReview")
	proto.RegisterType((*MsgCreateReviewResponse)(nil), "jack139.artchain.inventory.MsgCreateReviewResponse")
	proto.RegisterType((*MsgUpdateReview)(nil), "jack139.artchain.inventory.MsgUpdateReview")
	proto.RegisterType((*MsgUpdateReviewResponse)(nil), "jack139.artchain.inventory.MsgUpdateReviewResponse")
	proto.RegisterType((*MsgDeleteReview)(nil), "jack139.artchain.inventory.MsgDeleteReview")
	proto.RegisterType((*MsgDeleteReviewResponse)(nil), "jack139.artchain.inventory.MsgDeleteReviewResponse")
	proto.RegisterType((*MsgCreateItem)(nil), "jack139.artchain.inventory.MsgCreateItem")
	proto.RegisterType((*MsgCreateItemResponse)(nil), "jack139.artchain.inventory.MsgCreateItemResponse")
	proto.RegisterType((*MsgUpdateItem)(nil), "jack139.artchain.inventory.MsgUpdateItem")
	proto.RegisterType((*MsgUpdateItemResponse)(nil), "jack139.artchain.inventory.MsgUpdateItemResponse")
	proto.RegisterType((*MsgDeleteItem)(nil), "jack139.artchain.inventory.MsgDeleteItem")
	proto.RegisterType((*MsgDeleteItemResponse)(nil), "jack139.artchain.inventory.MsgDeleteItemResponse")
}

func init() { proto.RegisterFile("inventory/tx.proto", fileDescriptor_b129a116e431fe05) }

var fileDescriptor_b129a116e431fe05 = []byte{
	// 706 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x6d, 0x5e, 0x4e, 0x32, 0x4d, 0x52, 0x69, 0x24, 0xa8, 0x89, 0x90, 0x55, 0x45, 0x08, 0x88,
	0x10, 0x8e, 0x4a, 0x57, 0x5d, 0xd2, 0x06, 0xa1, 0x08, 0x55, 0xa0, 0x04, 0x36, 0xec, 0x1c, 0xfb,
	0x2a, 0x75, 0x68, 0x6c, 0xcb, 0x1e, 0x37, 0x0d, 0x5f, 0x01, 0x5f, 0x80, 0xf8, 0x02, 0x3e, 0x81,
	0x2d, 0xcb, 0x2e, 0x59, 0xa2, 0xe4, 0x47, 0xd0, 0xcc, 0xf8, 0x31, 0x4e, 0xeb, 0x47, 0xbb, 0xf3,
	0x7d, 0xcc, 0x3d, 0xa3, 0x73, 0xce, 0xcc, 0x18, 0x61, 0xd3, 0xba, 0x04, 0x8b, 0xd8, 0xee, 0x6a,
	0x40, 0xae, 0x54, 0xc7, 0xb5, 0x89, 0x8d, 0xbb, 0x73, 0x4d, 0xff, 0x72, 0x78, 0x74, 0xac, 0x6a,
	0x2e, 0xd1, 0xcf, 0x35, 0xd3, 0x52, 0xa3, 0xa6, 0xde, 0xf7, 0x32, 0xda, 0x3b, 0xf3, 0x66, 0xa7,
	0x2e, 0x68, 0x04, 0xc6, 0x70, 0x69, 0xc2, 0x12, 0xcb, 0xa8, 0xae, 0xd3, 0xd8, 0x76, 0xe5, 0xd2,
	0x41, 0xe9, 0x79, 0x73, 0x1c, 0x86, 0xb4, 0xe2, 0x82, 0xfe, 0x71, 0xe5, 0x80, 0x5c, 0xe6, 0x95,
	0x20, 0xc4, 0x0f, 0x91, 0x64, 0x12, 0x58, 0x8c, 0x0c, 0xb9, 0xc2, 0x0a, 0x41, 0x84, 0x15, 0x84,
	0x5c, 0x36, 0x15, 0xdc, 0x91, 0x21, 0x57, 0x59, 0x4d, 0xc8, 0xe0, 0x1e, 0x6a, 0xf1, 0x68, 0x08,
	0x44, 0x33, 0x2f, 0xe4, 0x1a, 0xeb, 0x48, 0xe4, 0xe2, 0x19, 0x43, 0x8d, 0x80, 0x2c, 0x89, 0x33,
	0x68, 0x86, 0xee, 0xca, 0x77, 0x4e, 0x6d, 0xdf, 0x22, 0x72, 0x9d, 0xef, 0x2a, 0x08, 0xf1, 0x63,
	0xd4, 0x34, 0xec, 0xa5, 0xc5, 0x6b, 0x0d, 0x56, 0x8b, 0x13, 0x74, 0xcf, 0x1e, 0xd1, 0x88, 0xef,
	0xc9, 0x4d, 0xbe, 0x67, 0x1e, 0xf5, 0xfa, 0x68, 0x7f, 0x8b, 0x92, 0x31, 0x78, 0x8e, 0x6d, 0x79,
	0x80, 0x3b, 0xa8, 0x6c, 0x1a, 0x8c, 0x95, 0xea, 0xb8, 0x6c, 0x1a, 0xbd, 0x9f, 0x9c, 0xbe, 0x4f,
	0x8e, 0x51, 0x84, 0x3e, 0xbe, 0xba, 0x1c, 0xae, 0x16, 0xe9, 0xac, 0xa4, 0xd1, 0x59, 0xcd, 0xa0,
	0xb3, 0x96, 0x4b, 0xa7, 0x94, 0x4b, 0x67, 0x3d, 0x8b, 0xce, 0x46, 0x06, 0x9d, 0xcd, 0x74, 0x3a,
	0x51, 0x82, 0xce, 0x47, 0x8c, 0x4e, 0x91, 0xa2, 0x90, 0xce, 0xde, 0x84, 0xb1, 0x37, 0x84, 0x0b,
	0xb8, 0x07, 0x7b, 0x29, 0x96, 0x0b, 0xf0, 0xc4, 0xa1, 0x11, 0xde, 0xaf, 0x0a, 0x6a, 0x47, 0xd2,
	0x8e, 0x08, 0x2c, 0xee, 0xe5, 0xf5, 0x2e, 0x6a, 0x50, 0xa8, 0x21, 0x78, 0x7a, 0x00, 0x1d, 0xc5,
	0x94, 0x5c, 0xfe, 0xcd, 0xe8, 0x0f, 0xfc, 0x1e, 0x67, 0xa2, 0xb5, 0x94, 0xfa, 0x9a, 0xb0, 0x96,
	0x12, 0x1f, 0xd4, 0x18, 0xa4, 0x14, 0xd7, 0x18, 0xe6, 0x01, 0xda, 0xa5, 0xdf, 0x13, 0x7f, 0x3a,
	0x07, 0x3d, 0xf4, 0xb9, 0x98, 0xa2, 0xe2, 0xd0, 0xf0, 0x0c, 0x0c, 0x53, 0x0b, 0xbd, 0x1e, 0x25,
	0xc2, 0xd9, 0x13, 0xf3, 0x2b, 0x04, 0xca, 0x45, 0x71, 0xb8, 0x72, 0xb4, 0xd0, 0x66, 0x10, 0x68,
	0x17, 0x27, 0x28, 0xcd, 0xaf, 0xdf, 0x4c, 0xde, 0xc1, 0x4a, 0xde, 0xe5, 0x34, 0xf3, 0x08, 0x3f,
	0x41, 0x6d, 0xda, 0x74, 0xa2, 0x79, 0xf0, 0xc1, 0x35, 0x75, 0x90, 0x5b, 0xac, 0x9c, 0x4c, 0xe2,
	0xa7, 0xa8, 0xa3, 0xfb, 0xae, 0x0b, 0x16, 0x79, 0xbf, 0xb4, 0x98, 0x69, 0xdb, 0xac, 0x6d, 0x2b,
	0x2b, 0x98, 0xa7, 0x93, 0x30, 0xcf, 0x33, 0xf4, 0x20, 0x21, 0x58, 0xea, 0x49, 0xfc, 0xcd, 0xa5,
	0xe5, 0x36, 0xcb, 0x91, 0xb6, 0xf8, 0x39, 0x14, 0xa5, 0xae, 0x66, 0x4a, 0x5d, 0xcb, 0x94, 0x5a,
	0xca, 0x90, 0xba, 0x9e, 0x2d, 0x75, 0x23, 0x47, 0xea, 0x66, 0x96, 0xd4, 0x28, 0x4b, 0xea, 0xdd,
	0x74, 0xa9, 0x5b, 0xd9, 0x52, 0xb7, 0x8b, 0x49, 0xdd, 0xc9, 0x91, 0x7a, 0x2f, 0x21, 0xf5, 0x3e,
	0x93, 0x3a, 0x16, 0x30, 0x3a, 0xb5, 0xc7, 0x4c, 0x59, 0x7e, 0xa0, 0xef, 0xa6, 0x6c, 0x30, 0x33,
	0x5e, 0x1a, 0xce, 0x7c, 0xf5, 0xa3, 0x86, 0x2a, 0x67, 0xde, 0x0c, 0x3b, 0xa8, 0x95, 0x78, 0xfb,
	0x5e, 0xa8, 0xe9, 0x8f, 0xa5, 0xba, 0xf5, 0x2a, 0x74, 0x8f, 0xee, 0xd0, 0x1c, 0x19, 0xd7, 0x41,
	0xad, 0xc4, 0x73, 0x91, 0x87, 0x28, 0x36, 0xe7, 0x22, 0xde, 0x76, 0xcb, 0x52, 0xc4, 0xc4, 0x15,
	0x9b, 0x87, 0x28, 0x36, 0xe7, 0x22, 0xde, 0x76, 0xcf, 0xe2, 0x39, 0x42, 0xc2, 0x1d, 0xdb, 0x2f,
	0x44, 0x13, 0x6d, 0xed, 0x1e, 0x16, 0x6e, 0x15, 0xb1, 0x84, 0x43, 0xdf, 0x2f, 0x44, 0x50, 0x21,
	0xac, 0x9b, 0x4e, 0xa4, 0x58, 0x82, 0x0d, 0xfb, 0x85, 0xa8, 0x29, 0x84, 0x75, 0xd3, 0xa1, 0x27,
	0x6f, 0xff, 0xac, 0x95, 0xd2, 0xf5, 0x5a, 0x29, 0xfd, 0x5b, 0x2b, 0xa5, 0x6f, 0x1b, 0x65, 0xe7,
	0x7a, 0xa3, 0xec, 0xfc, 0xdd, 0x28, 0x3b, 0x9f, 0x5f, 0xce, 0x4c, 0x72, 0xee, 0x4f, 0x55, 0xdd,
	0x5e, 0x0c, 0x82, 0xb1, 0x83, 0x70, 0xec, 0xe0, 0x6a, 0x20, 0xfc, 0x01, 0xae, 0x1c, 0xf0, 0xa6,
	0x12, 0xfb, 0x0b, 0x3c, 0xfa, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x66, 0x3a, 0x3f, 0x1b, 0x0a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateReview(ctx context.Context, in *MsgCreateReview, opts ...grpc.CallOption) (*MsgCreateReviewResponse, error)
	UpdateReview(ctx context.Context, in *MsgUpdateReview, opts ...grpc.CallOption) (*MsgUpdateReviewResponse, error)
	DeleteReview(ctx context.Context, in *MsgDeleteReview, opts ...grpc.CallOption) (*MsgDeleteReviewResponse, error)
	CreateItem(ctx context.Context, in *MsgCreateItem, opts ...grpc.CallOption) (*MsgCreateItemResponse, error)
	UpdateItem(ctx context.Context, in *MsgUpdateItem, opts ...grpc.CallOption) (*MsgUpdateItemResponse, error)
	DeleteItem(ctx context.Context, in *MsgDeleteItem, opts ...grpc.CallOption) (*MsgDeleteItemResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateReview(ctx context.Context, in *MsgCreateReview, opts ...grpc.CallOption) (*MsgCreateReviewResponse, error) {
	out := new(MsgCreateReviewResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.inventory.Msg/CreateReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateReview(ctx context.Context, in *MsgUpdateReview, opts ...grpc.CallOption) (*MsgUpdateReviewResponse, error) {
	out := new(MsgUpdateReviewResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.inventory.Msg/UpdateReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteReview(ctx context.Context, in *MsgDeleteReview, opts ...grpc.CallOption) (*MsgDeleteReviewResponse, error) {
	out := new(MsgDeleteReviewResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.inventory.Msg/DeleteReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateItem(ctx context.Context, in *MsgCreateItem, opts ...grpc.CallOption) (*MsgCreateItemResponse, error) {
	out := new(MsgCreateItemResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.inventory.Msg/CreateItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateItem(ctx context.Context, in *MsgUpdateItem, opts ...grpc.CallOption) (*MsgUpdateItemResponse, error) {
	out := new(MsgUpdateItemResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.inventory.Msg/UpdateItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteItem(ctx context.Context, in *MsgDeleteItem, opts ...grpc.CallOption) (*MsgDeleteItemResponse, error) {
	out := new(MsgDeleteItemResponse)
	err := c.cc.Invoke(ctx, "/jack139.artchain.inventory.Msg/DeleteItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateReview(context.Context, *MsgCreateReview) (*MsgCreateReviewResponse, error)
	UpdateReview(context.Context, *MsgUpdateReview) (*MsgUpdateReviewResponse, error)
	DeleteReview(context.Context, *MsgDeleteReview) (*MsgDeleteReviewResponse, error)
	CreateItem(context.Context, *MsgCreateItem) (*MsgCreateItemResponse, error)
	UpdateItem(context.Context, *MsgUpdateItem) (*MsgUpdateItemResponse, error)
	DeleteItem(context.Context, *MsgDeleteItem) (*MsgDeleteItemResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateReview(ctx context.Context, req *MsgCreateReview) (*MsgCreateReviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReview not implemented")
}
func (*UnimplementedMsgServer) UpdateReview(ctx context.Context, req *MsgUpdateReview) (*MsgUpdateReviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReview not implemented")
}
func (*UnimplementedMsgServer) DeleteReview(ctx context.Context, req *MsgDeleteReview) (*MsgDeleteReviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReview not implemented")
}
func (*UnimplementedMsgServer) CreateItem(ctx context.Context, req *MsgCreateItem) (*MsgCreateItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItem not implemented")
}
func (*UnimplementedMsgServer) UpdateItem(ctx context.Context, req *MsgUpdateItem) (*MsgUpdateItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateItem not implemented")
}
func (*UnimplementedMsgServer) DeleteItem(ctx context.Context, req *MsgDeleteItem) (*MsgDeleteItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItem not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateReview)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.inventory.Msg/CreateReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateReview(ctx, req.(*MsgCreateReview))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateReview)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.inventory.Msg/UpdateReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateReview(ctx, req.(*MsgUpdateReview))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteReview)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.inventory.Msg/DeleteReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteReview(ctx, req.(*MsgDeleteReview))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.inventory.Msg/CreateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateItem(ctx, req.(*MsgCreateItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.inventory.Msg/UpdateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateItem(ctx, req.(*MsgUpdateItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jack139.artchain.inventory.Msg/DeleteItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteItem(ctx, req.(*MsgDeleteItem))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jack139.artchain.inventory.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReview",
			Handler:    _Msg_CreateReview_Handler,
		},
		{
			MethodName: "UpdateReview",
			Handler:    _Msg_UpdateReview_Handler,
		},
		{
			MethodName: "DeleteReview",
			Handler:    _Msg_DeleteReview_Handler,
		},
		{
			MethodName: "CreateItem",
			Handler:    _Msg_CreateItem_Handler,
		},
		{
			MethodName: "UpdateItem",
			Handler:    _Msg_UpdateItem_Handler,
		},
		{
			MethodName: "DeleteItem",
			Handler:    _Msg_DeleteItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inventory/tx.proto",
}

func (m *MsgCreateReview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DownCount) > 0 {
		i -= len(m.DownCount)
		copy(dAtA[i:], m.DownCount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DownCount)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.UpCount) > 0 {
		i -= len(m.UpCount)
		copy(dAtA[i:], m.UpCount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UpCount)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ReviewDate) > 0 {
		i -= len(m.ReviewDate)
		copy(dAtA[i:], m.ReviewDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReviewDate)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ReviewDetail) > 0 {
		i -= len(m.ReviewDetail)
		copy(dAtA[i:], m.ReviewDetail)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReviewDetail)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ReviewerId) > 0 {
		i -= len(m.ReviewerId)
		copy(dAtA[i:], m.ReviewerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReviewerId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ItemId) > 0 {
		i -= len(m.ItemId)
		copy(dAtA[i:], m.ItemId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateReviewResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReviewResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReviewResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.DownCount) > 0 {
		i -= len(m.DownCount)
		copy(dAtA[i:], m.DownCount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DownCount)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.UpCount) > 0 {
		i -= len(m.UpCount)
		copy(dAtA[i:], m.UpCount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UpCount)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ReviewDate) > 0 {
		i -= len(m.ReviewDate)
		copy(dAtA[i:], m.ReviewDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReviewDate)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ReviewDetail) > 0 {
		i -= len(m.ReviewDetail)
		copy(dAtA[i:], m.ReviewDetail)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReviewDetail)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ReviewerId) > 0 {
		i -= len(m.ReviewerId)
		copy(dAtA[i:], m.ReviewerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReviewerId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ItemId) > 0 {
		i -= len(m.ItemId)
		copy(dAtA[i:], m.ItemId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReviewResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReviewResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReviewResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ItemId) > 0 {
		i -= len(m.ItemId)
		copy(dAtA[i:], m.ItemId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReviewResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReviewResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReviewResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.CurrentOwnerId) > 0 {
		i -= len(m.CurrentOwnerId)
		copy(dAtA[i:], m.CurrentOwnerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CurrentOwnerId)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.ItemBasePrice) > 0 {
		i -= len(m.ItemBasePrice)
		copy(dAtA[i:], m.ItemBasePrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemBasePrice)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.AESKey) > 0 {
		i -= len(m.AESKey)
		copy(dAtA[i:], m.AESKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AESKey)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ItemImage) > 0 {
		i -= len(m.ItemImage)
		copy(dAtA[i:], m.ItemImage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemImage)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ItemSize) > 0 {
		i -= len(m.ItemSize)
		copy(dAtA[i:], m.ItemSize)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemSize)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ItemMedia) > 0 {
		i -= len(m.ItemMedia)
		copy(dAtA[i:], m.ItemMedia)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemMedia)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ItemSubject) > 0 {
		i -= len(m.ItemSubject)
		copy(dAtA[i:], m.ItemSubject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemSubject)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ItemType) > 0 {
		i -= len(m.ItemType)
		copy(dAtA[i:], m.ItemType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ItemDate) > 0 {
		i -= len(m.ItemDate)
		copy(dAtA[i:], m.ItemDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemDate)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ItemDetail) > 0 {
		i -= len(m.ItemDetail)
		copy(dAtA[i:], m.ItemDetail)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemDetail)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ItemDesc) > 0 {
		i -= len(m.ItemDesc)
		copy(dAtA[i:], m.ItemDesc)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemDesc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateItemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateItemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateItemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.CurrentOwnerId) > 0 {
		i -= len(m.CurrentOwnerId)
		copy(dAtA[i:], m.CurrentOwnerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CurrentOwnerId)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.ItemBasePrice) > 0 {
		i -= len(m.ItemBasePrice)
		copy(dAtA[i:], m.ItemBasePrice)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemBasePrice)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.AESKey) > 0 {
		i -= len(m.AESKey)
		copy(dAtA[i:], m.AESKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AESKey)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ItemImage) > 0 {
		i -= len(m.ItemImage)
		copy(dAtA[i:], m.ItemImage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemImage)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ItemSize) > 0 {
		i -= len(m.ItemSize)
		copy(dAtA[i:], m.ItemSize)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemSize)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ItemMedia) > 0 {
		i -= len(m.ItemMedia)
		copy(dAtA[i:], m.ItemMedia)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemMedia)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ItemSubject) > 0 {
		i -= len(m.ItemSubject)
		copy(dAtA[i:], m.ItemSubject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemSubject)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ItemType) > 0 {
		i -= len(m.ItemType)
		copy(dAtA[i:], m.ItemType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemType)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ItemDate) > 0 {
		i -= len(m.ItemDate)
		copy(dAtA[i:], m.ItemDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemDate)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ItemDetail) > 0 {
		i -= len(m.ItemDetail)
		copy(dAtA[i:], m.ItemDetail)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemDetail)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ItemDesc) > 0 {
		i -= len(m.ItemDesc)
		copy(dAtA[i:], m.ItemDesc)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ItemDesc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RecType) > 0 {
		i -= len(m.RecType)
		copy(dAtA[i:], m.RecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateItemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateItemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateItemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteItemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteItemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteItemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateReview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReviewerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReviewDetail)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReviewDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UpCount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DownCount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateReviewResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateReview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReviewerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReviewDetail)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReviewDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UpCount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DownCount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateReviewResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteReview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.ItemId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteReviewResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemDesc)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemDetail)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemSubject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemMedia)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemSize)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemImage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AESKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemBasePrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CurrentOwnerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateItemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.RecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemDesc)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemDetail)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemSubject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemMedia)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemSize)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemImage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AESKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ItemBasePrice)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CurrentOwnerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateItemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteItemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateReview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReviewerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReviewerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReviewDetail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReviewDetail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReviewDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReviewDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpCount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpCount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownCount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DownCount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReviewResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReviewResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReviewResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReviewerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReviewerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReviewDetail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReviewDetail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReviewDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReviewDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpCount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpCount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownCount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DownCount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReviewResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReviewResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReviewResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReviewResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReviewResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReviewResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemDetail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemDetail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemSubject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemSubject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemMedia", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemMedia = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemSize", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemSize = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AESKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AESKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemBasePrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemBasePrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentOwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentOwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateItemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateItemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateItemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemDetail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemDetail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemSubject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemSubject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemMedia", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemMedia = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemSize", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemSize = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AESKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AESKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemBasePrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemBasePrice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentOwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentOwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateItemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateItemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateItemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteItemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteItemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteItemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
